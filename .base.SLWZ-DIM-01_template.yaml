substitutions:
  api_disconnect_reboot_timeout: "15min"
  wifi_disconnect_reboot_timeout: "15min"

esphome:
  name: ${device_name}
  friendly_name: ${device_friendly_name}
  project:
    name: SLWZ-DIM-01_template 
    version: "1.1"

esp8266:
  board: esp01_1m

substitutions:
  constant_min_brightness: "25"
  constant_max_brightness: "255"

# Enable Home Assistant API
api:
  reboot_timeout: ${api_disconnect_reboot_timeout}
  encryption:
    key: ${api_key}

ota:
  - platform: esphome
    password: ${ota_password}

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: ${wifi_disconnect_reboot_timeout}

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${hotspot_name}
    password: ${hotspot_password}

captive_portal:
    
# Enable logging
logger:
  level: ${log_level}
  baud_rate: 0 # Disable log to uart because using Uart for TuyaMCU

web_server:
  port: 80
  version: 3

uart:
  rx_pin: GPIO3
  tx_pin: GPIO1
  baud_rate: 9600

sensor:
  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s
    entity_category: diagnostic
    web_server:
      sorting_weight: 202

text_sensor:
  - platform: wifi_info
    ssid:
      name: "WiFi SSID"
      entity_category: diagnostic
      web_server:
        sorting_weight: 201
    ip_address:
      name: "IP Address"
      entity_category: diagnostic
      web_server:
        sorting_weight: 203
    mac_address:
      name: "MAC Address"
      entity_category: diagnostic
      web_server:
        sorting_weight: 204
  - platform: template
    name: "Wifi Channel"
    entity_category: diagnostic
    web_server:
        sorting_weight: 205
    lambda: |-
      std::string out;
      char buffer[10];
      snprintf(buffer, 10, "%u", wifi_get_channel());
      out.append(buffer);
      return out;
    update_interval: 60s

button:
  - platform: restart
    name: "Device Restart"
    id: id_button_device_restart

tuya:

light:
  - platform: tuya
    name: "Dimmer"
    dimmer_datapoint: 3
    min_value: ${constant_min_brightness}
    min_value_datapoint: 102
    max_value: ${constant_max_brightness}
    switch_datapoint: 1
    id: dimmer
    flash_transition_length: 0s
    default_transition_length: 0s
    web_server:
      sorting_weight: -1

number:
  - platform: tuya
    number_datapoint: 101
    name: "Brightness Max"
    id: id_number_brightness_max
    min_value: 128
    max_value: ${constant_max_brightness}
    step: 1
    entity_category: config
    web_server:
      sorting_weight: 2
  - platform: tuya
    number_datapoint: 102
    name: "Brightness Min"
    id: id_number_brightness_min
    min_value: ${constant_min_brightness}
    max_value: 127
    step: 1
    entity_category: config
    web_server:
      sorting_weight: 1
  # Allows for setting brightness value without turning the light ON
  - platform: tuya
    number_datapoint: 3
    name: "Dimmer Brightness Control"
    id: brightness_control
    min_value: ${constant_min_brightness}
    max_value: ${constant_max_brightness}
    step: 1
    web_server:
      sorting_weight: 0
